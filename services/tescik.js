import { GoogleGenerativeAI } from '@google/generative-ai';
import dotenv from 'dotenv';
import { getProducts, saveFeedFileToDisk } from '../services/processFeed.js';
import mongoose from 'mongoose';
import fs from 'fs';
import { jsonrepair } from 'jsonrepair';

const GEMINI_API_KEY = 'AIzaSyCMQp2cv6Nshe_sKNMNAPIhLvcY5hxK2k0';
const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);

const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });
dotenv.config({ path: '../.env' });

mongoose.set('strictQuery', true);

await mongoose.connect(
	process.env.DATABASE_URL,
	{
		useNewUrlParser: true,
		useUnifiedTopology: true,
		serverSelectionTimeoutMS: 0,
		socketTimeoutMS: 0,
		connectTimeoutMS: 0,
		heartbeatFrequencyMS: 2000,
	},
	(error) => {
		if (error) {
			console.log(error);
		}
	}
);
mongoose.connection.on('error', (err) => console.log(err));

const data = [
	'HOM-03203',
	'KPL-09994',
	'KPL-09993',
	'KPL-09992',
	'ZLE-00101',
	'ZLE-00100',
	'ZLE-00102',
	'REA-U5052',
	'REA-U8704',
	'REA-U1054',
	'REA-U6500',
	'REA-A9695',
	'REA-A9652',
	'REA-U8006',
	'REA-U5803',
	'REA-U4800',
	'REA-U6506',
	'ZLE-00131',
	'ZLE-00129',
	'KPL-09996',
	'KPL-09995',
	'REA-U6678',
	'REA-A3210',
	'REA-A9653',
	'KPL-02016',
	'REA-U8003',
	'ZLE-00135',
	'KPL-10001',
	'KPL-10000',
	'KPL-09999',
	'KPL-09998',
	'KPL-09997',
	'REA-U9685',
	'REA-U5603',
	'REA-U6599',
	'REA-U6596',
	'REA-U7400',
	'REA-A0079',
	'REA-A0080',
	'REA-U6502',
	'REA-U5063',
	'REA-U6505',
	'REA-U0154',
	'ZLE-09015',
	'ZLE-09008',
	'ZLE-09022',
	'ZLE-09009',
	'ZLE-09003',
	'ZLE-09011',
	'ZLE-09600',
	'ZLE-09004',
	'HCQK5052ST',
	'ZLE-09010',
	'HQD7644U7_PVDG1_U',
	'HQD7644U7_PVDC1_U',
	'HQD7644U7_BLM_U',
	'HQD7644U8_PVDG1_U',
	'HQD7644U8_PVDC1_U',
	'HQD7644U8_BS_U',
	'HQJ6045U5_PVDG1_U',
	'HQJ6045U5_PVDC1_U',
	'HQJ6045U5_BS_U',
	'HQJ6045U4_PVDG1_U',
	'HQJ6045U4_PVDC1_U',
	'HQJ6045U4_BS_U',
	'HCQL5646U4-G1_U',
	'HCQL5646U4-C1_U',
	'HCQL5646U4-BS_U',
	'HQM7650U7_PVDG1',
	'HQM7650U7_PVDC1',
	'HQM7650U7_BS',
	'HQM7650U8_PVDG1',
	'HQM7650U8_PVDC1',
	'HQM7650U8_BS',
	'HQM7650U4_PVDG1',
	'HQM7650U4_PVDC1',
	'HQM7650U4_BS',
	'HQM7650U5_PVDG1',
	'HQM7650U5_PVDC1',
	'ZLE-09023',
	'HQM7650U1_PVDG1',
	'HQM7650U1_PVDC1',
	'HQM7650U1_BS',
	'REA-U8009',
	'REA-U8001',
	'REA-U8012',
	'REA-U8011',
	'REA-U8000',
	'REA-U8014',
	'ZLE-00130',
	'ZLE-00126',
	'ZLE-00132',
	'ZLE-00127',
	'REA-U6625',
	'ZLE-00111',
	'ZLE-00134',
	'REA-U5896',
	'REA-U4522',
	'REA-U8404',
	'REA-U8403',
	'REA-U1232',
	'REA-U7478',
	'REA-U5053',
	'REA-U8907',
	'REA-U5609',
	'REA-U5685',
	'REA-U5666',
	'REA-U5611',
	'REA-U8695',
	'REA-U6906',
	'REA-U8598',
	'REA-U8597',
	'REA-U8568',
	'REA-U8548',
	'REA-U0539',
	'REA-U0994',
	'REA-U8703',
	'REA-U8702',
	'REA-U6598',
	'REA-U6597',
	'REA-U6606',
	'REA-U6963',
	'REA-A9506',
	'REA-A9505',
	'REA-U6759',
	'REA-A0523',
	'REA-A8965',
	'REA-A0522',
	'REA-U6643',
	'REA-U5067',
	'REA-U6503',
	'REA-U0416',
	'REA-U6660',
	'REA-U9670',
	'REA-U0278',
	'REA-U6504',
	'REA-U0601',
	'REA-U9107',
	'HCQK5052BIK',
	'HQJ6045U8_PVDG1_U',
	'HQJ6045U8_PVDC1_U',
	'HQJ6045U8_BS_U',
	'HQJ6045U7_PVDG1_U',
	'HQJ6045U7_PVDC1_U',
	'HQJ6045U7_BLM_U',
	'HCQL5646U5-G1_U',
	'HCQL5646U5-C1_U',
	'HCQL5646U5-BS_U',
	'REA-U9087',
	'REA-U4100',
	'REA-U4101',
	'REA-U8010',
	'REA-U1055',
	'REA-U1063',
	'ZLE-00133',
	'ZLE-00125',
	'ZLE-00128',
	'REA-U6203',
	'ZLE-00112',
	'ZLE-00123',
	'ZLE-00124',
	'ZLE-00109',
	'REA-U6510',
	'REA-U1223',
	'REA-U8908',
	'REA-U8462',
	'REA-U6605',
	'REA-U4664',
	'REA-U5634',
	'REA-U5635',
	'REA-U9605',
	'REA-U3690',
	'REA-U5800',
	'REA-U4122',
	'REA-U1060',
	'REA-U6501',
	'REA-U8008',
	'REA-U5065',
	'REA-U8007',
	'REA-U9900',
	'REA-U9015',
	'REA-U1500',
	'REA-U0279',
	'REA-U8881',
	'REA-U5068',
	'REA-U8880',
	'REA-U9656',
	'ZLE-00119',
	'ZLE-09000',
	'ZLE-09035',
	'HB7911BS',
	'HB7911-RBS',
	'HQD5542U7-G1',
	'HQD5542U7-C1',
	'HQD5542U7-BS',
	'HQD5542U8-G1',
	'HQD5542U8-C1',
	'HQD5542U8-BS',
	'HQD5542U5-G1',
	'HQD5542U5-C1',
	'HQD5542U5-BS',
	'HQD5542U1-G1',
	'HQD5542U1-C1',
	'HQD5542U1-BS',
	'HQD7644U5_PVDG1_U',
	'HQD7644U5_PVDC1_U',
	'HQD7644U5_BS_U',
	'HQD7644U4_PVDG1_U',
	'HQD7644U4_PVDC1_U',
	'HQD7644U4_BS_U',
	'HQD7644U1_PVDG1_U',
	'HQD7644U1_PVDC1_U',
	'HQD7644U1_BS_U',
	'HQJ6045U1_PVDG1_U',
	'HQJ6045U1_PVDC1_U',
	'HQJ6045U1_BS_U',
	'HCQL5646U1-G1_U',
	'HCQL5646U1-C1_U',
	'HCQL5646U1-BS_U',
	'HCQL5646U8-G1_U',
	'HCQL5646U8-C1_U',
	'HCQL5646U8-BS_U',
	'HCQL5646U7-G1_U',
	'HCQL5646U7-C1_U',
	'HCQL5646U7-BLM_U',
	'REA-U4304',
	'REA-U8005',
	'SYF-00100',
	'ZLE-00110',
	'ZLE-00113',
	'ZLE-00105',
	'ZLE-00103',
	'ZLE-00106',
	'ZLE-00108',
	'REA-U3308',
	'REA-U3309',
	'REA-U8471',
	'OSW-03205',
	'BEL-00001',
	'BEL-00002',
	'REA-U5054',
	'REA-U6933',
	'REA-U8196',
	'REA-U1020',
	'REA-U0563',
	'REA-U4567',
	'REA-U4566',
	'REA-U9619',
	'REA-U0623',
	'REA-U6962',
	'REA-U8903',
	'REA-U8902',
	'REA-U8901',
	'REA-U8900',
	'REA-U9610',
	'REA-U9611',
	'REA-U8493',
	'REA-U7916',
	'REA-U6960',
	'REA-U5071',
	'REA-U6031',
	'REA-U6030',
	'REA-U6651',
	'REA-A0521',
	'REA-A0524',
	'REA-U0442',
	'REA-U0333',
	'REA-A0077',
	'REA-A0078',
	'REA-U1059',
	'REA-U5066',
	'REA-U1050',
	'REA-U0441',
	'REA-U1003',
	'REA-U0133',
	'REA-U0273',
	'REA-U9671',
	'ZLE-00118',
	'ZLE-09013',
	'ZH6048BS_3323503BL',
	'ZH6048PVDBLM',
	'ZH6048PVDBLM_3323503PVDBLM',
	'MF76050BS',
	'HB7911PVDBSG1',
	'HB4050PVDBSG1',
	'MF7444PVDBSG1',
	'ZLE-09017',
	'REA-U6801',
	'REA-U6800',
	'REA-U9615',
	'REA-U6803',
	'REA-U6802',
	'REA-U4620',
	'REA-U4305',
	'REA-A8541',
	'REA-A5692',
	'REA-U8004',
	'REA-U8013',
	'REA-U8002',
	'SYF-00101',
	'REA-U9667',
	'REA-U6520',
	'REA-U9669',
	'REA-U4527',
	'REA-U7444',
	'ZLE-00104',
	'REA-U6211',
	'ZLE-00121',
	'ZLE-00120',
	'REA-U6757',
	'REA-U6758',
	'REA-U6210',
	'REA-U5521',
	'REA-U5098',
	'REA-U3305',
	'REA-U3302',
	'REA-U5055',
	'REA-U8472',
	'REA-U3402',
	'REA-U8749',
	'REA-U5667',
	'REA-U3695',
	'REA-U3697',
	'REA-U8523',
	'KPL-U8900',
	'KPL-U8902',
	'REA-U8666',
	'REA-U5051',
	'REA-U8856',
	'REA-U0858',
	'REA-U5610',
	'REA-U5600',
	'REA-U6593',
	'REA-U5692',
	'REA-U9154',
	'REA-U5602',
	'REA-U5605',
	'REA-U8550',
	'REA-U8549',
	'REA-U3401',
	'REA-U3400',
	'REA-U5678',
	'REA-U8742',
	'REA-U2514',
	'REA-U0165',
	'REA-U5656',
	'REA-U6932',
	'REA-U8570',
	'REA-U8569',
	'REA-U1021',
	'REA-U1022',
	'REA-U6345',
	'REA-U8796',
	'REA-U8567',
	'REA-U8778',
	'REA-U8779',
	'REA-U8802',
	'REA-U0538',
	'REA-U8780',
	'REA-U6978',
	'REA-U0732',
	'REA-U0952',
	'REA-U0692',
	'REA-U6333',
	'REA-U0595',
	'REA-A8536',
	'REA-U5644',
	'REA-U3287',
	'REA-U4663',
	'REA-U6655',
	'REA-U0699',
	'REA-U9888',
	'REA-U6332',
	'REA-U8736',
	'REA-U3217',
	'REA-U5637',
	'KPL-U8901',
	'REA-U1878',
	'REA-A5693',
	'REA-U0445',
	'REA-U8536',
	'REA-U8543',
	'REA-U6961',
	'REA-U5804',
	'REA-U5802',
	'REA-A5215',
	'REA-U4601',
	'REA-U4560',
	'REA-U5601',
	'REA-U1801',
	'REA-U1800',
	'REA-U0024',
	'REA-U7905',
	'REA-U5900',
	'REA-U4561',
	'REA-U0843',
	'REA-U9607',
	'REA-U8470',
	'REA-U0842',
	'REA-U9609',
	'REA-U9603',
	'REA-U9600',
	'REA-U0027',
	'REA-U9906',
	'REA-U9909',
	'REA-U0798',
	'REA-U7910',
	'REA-U8498',
	'REA-U8496',
	'REA-U8492',
	'REA-U8491',
	'REA-U8490',
	'REA-U0840',
	'REA-U1899',
	'REA-U1890',
	'REA-U1891',
	'REA-U8605',
	'REA-U8602',
	'REA-U8603',
	'REA-U8606',
	'REA-U0274',
	'REA-U4120',
	'REA-U4121',
	'REA-U9908',
	'REA-U9652',
	'REA-U9907',
	'REA-U0568',
	'REA-U6645',
	'REA-U6650',
	'REA-U6653',
	'REA-U6647',
	'REA-U6648',
	'REA-U6646',
	'REA-U5064',
	'REA-U9901',
	'REA-U6300',
	'REA-U0756',
	'REA-A1001',
	'REA-A1000',
	'REA-U6521',
	'REA-U0456',
	'REA-U1952',
	'REA-U8198',
	'REA-U8197',
	'REA-U1052',
	'REA-U8400',
	'REA-U0155',
	'REA-U1501',
	'REA-U0669',
	'REA-U0040',
	'REA-U0190',
	'REA-U1953',
	'KPL-90004',
	'KPL-90005',
	'REA-U6032',
	'REA-U6020',
	'REA-U6022',
	'REA-U9661',
	'REA-U9657',
	'REA-U9653',
	'REA-U6507',
	'REA-U5060',
	'REA-U3322',
	'ZLE-00115',
	'REA-U9108',
	'REA-U3321',
	'ZLE-00116',
	'ZLE-00117',
	'REA-U0600',
	'REA-U3324',
	'REA-A4400',
	'REA-U3326',
	'REA-U3325',
	'REA-U3323',
	'ZLE-00136',
	'REA-U9109',
	'REA-U0631',
	'ZH4045BS',
	'ZLE-09012',
	'ZLE-09005',
	'ZLE-09024',
	'HB7912BS',
	'HB7912-RBS',
	'HB7911PVDBSC1',
	'HB4050BS',
	'HB4050PVDBSC1',
	'MF7444BS',
	'MF7444PVDBSC1',
	'MF5444PVDBSG1',
	'MF5444PVDBSC1',
	'MF4444BS',
	'REA-U7445',
	'REA-U1057',
	'REA-U9088',
	'REA-U4302',
	'REA-U4306',
	'REA-U4303',
	'REA-U6945',
	'REA-U6658',
	'REA-U1062',
	'REA-U9668',
	'REA-U6630',
	'ZLE-00122',
	'REA-U6513',
	'ZLE-00107',
	'REA-U2541',
	'REA-U9650',
	'REA-U3310',
	'REA-U3306',
	'REA-U3307',
	'REA-U3301',
	'REA-U3300',
	'REA-U3304',
	'REA-U3303',
	'REA-A6952',
	'KPL-U8778',
	'KPL-U8802',
	'REA-U0267',
	'REA-U8811',
	'REA-U4545',
	'REA-U6334',
	'REA-U7808',
	'REA-U8978',
	'REA-U8596',
	'REA-U1023',
	'REA-U6330',
	'REA-U6331',
	'KPL-U8779',
	'REA-U0961',
	'REA-U0696',
	'REA-U0265',
	'REA-U0266',
	'REA-U8701',
	'REA-U7411',
	'REA-U2360',
	'REA-U9887',
	'REA-U9889',
	'REA-U6635',
	'REA-U6656',
	'REA-U0469',
	'REA-U0677',
	'REA-U3800',
	'REA-U3802',
	'REA-U3801',
	'REA-U5633',
	'REA-U8544',
	'REA-U8537',
	'REA-U5801',
	'REA-U4603',
	'REA-U0035',
	'REA-U7900',
	'REA-U8906',
	'REA-U8905',
	'REA-U8904',
	'REA-U6600',
	'REA-U0140',
	'REA-U8709',
	'REA-U8495',
	'REA-U8565',
	'REA-U6649',
	'REA-U6644',
	'REA-U0423',
	'REA-W059R',
	'REA-U7401',
	'REA-U0422',
	'REA-U6524',
	'REA-U6563',
	'REA-U0852',
	'REA-U0420',
	'REA-U9001',
	'REA-U0873',
	'REA-U0656',
	'REA-U0158',
	'REA-U1135',
	'REA-U0493',
	'REA-U0638',
	'REA-U0160',
	'REA-00692',
	'REA-U0064',
	'REA-U0875',
	'REA-U0151',
	'REA-U0462',
	'REA-U0157',
	'REA-U5000',
	'REA-U5070',
	'REA-U6021',
	'REA-U9655',
	'REA-U0603',
	'REA-U0602',
	'REA-U0604',
	'REA-U7502',
	'REA-U7506',
	'REA-U7501',
	'REA-U7505',
	'REA-U7500',
	'REA-U7503',
	'REA-U0630',
	'HB7912PVDBSG1',
	'HB7912PVDBSC1',
	'HB7910BS',
	'ZLE-09007',
	'ZLE-09052',
	'MF5444PVDBST1',
	'ZLE-90024',
	'MF4444PVDBSC1',
	'REA-U9086',
	'REA-U6900',
	'REA-A8586',
	'KPL-00941',
	'REA-U8700',
	'REA-U9902',
	'REA-A0074',
	'REA-A0020',
	'REA-U1051',
	'REA-U0786',
	'REA-U7422',
	'REA-U7504',
	'REA-U4300',
	'REA-A5216',
	'REA-U8781',
	'REA-A4100',
	'MCA-000006',
	'REA-A6000',
	'REA-A8585',
	'REA-A533A',
	'REA-A2360',
	'REA-A2361',
	'REA-A5218',
	'REA-A5217',
	'REA-U0879',
	'REA-U4301',
	'REA-A8110',
];

const generateAiData = async () => {
	const products = await getProducts().then((data) => data);
	const filteredProducts = products
		.filter((product) =>
			data.some((sku) => product.sku.toUpperCase() === sku.toUpperCase())
		)
		.map((product) => {
			return {
				sku: product.sku,
				url: 'https://lazienka-rea.com.pl/' + product.url['pl']['Rea'],
				title: '',
				description: '',
			};
		});
	const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });

	const files = fs.readdirSync('./prods');
	const makeRequest = (product, index) => {
		const exists = files
			.map((file) => file.replace('.json', ''))
			.some((prod) => prod === product.sku);
		console.log(exists);
		if (exists) return;
		return new Promise(async (resolve, reject) => {
			const prompt = `Korzystając ze strony ${product.url} potrzebuję żebyś utworzył nowy opis 3-10 zdań oraz na końcu lista z parametrami oraz prosty tytuł produktu który składa się z rodzaju produktu, nazwy modelu i ewentualnego wariantu. Posiłkuj się danymi, informacjami i parametrami z podanego linku. Zwróć wszystko w formie JSON bazując na tym schemacie: {"title": [{ "pl": "" }, { "fr": "" }, { "de": "" }],"description": [{ "pl": "" }, { "fr": "" }, { "de": "" }],"parameters": [{"name": [{ "pl": "" }, { "fr": "" }, { "de": "" }],"value": [{ "pl": "" }, { "fr": "" }, { "de": "" }],},...],}.`;

			const result = await model.generateContent(prompt);
			const response = await result.response;
			const text = response.text();

			fs.writeFileSync(
				`./prods/${product.sku}.json`,
				JSON.stringify({
					sku: product.sku,
					text,
				}),
				'utf8'
			);
			(function (i) {
				setTimeout(() => {
					console.log(i);
					resolve();
				}, 3000);
			})(index);
		});
	};

	for await (const [index, product] of filteredProducts.entries()) {
		await makeRequest(product, index);
	}
};

// generateAiData();

const files = fs.readdirSync('./prods');

const products = files.map((file) => {
	const data = fs.readFileSync('./prods/' + file, 'utf8');
	const product = JSON.parse(data);
	const productText = JSON.parse(
		jsonrepair(
			product.text
				.replace('```json', '')
				.replace('```', '')
				.split('')
				.map((char) => {
					if (char === '(') return '{';
					if (char === ')') return '}';
					return char;
				})
				.join('')
		)
	);
	console.dir({ sku: product.sku, productText }, { depth: null });
	// return {
	// 	sku: product.sku,
	// 	title: productText.title,
	// 	description: productText.description,
	// 	parameters:
	// 		productText.parameters.length === undefined
	// 			? [productText.parameters]
	// 			: productText.parameters,
	// };
});
// console.log(products);
// 	.map((product) => {
// 		return {
// 			sku: product.sku,
// 			title: product.title,
// 			description: `<div>\n<p>\n${product.description}</p>\n<span><strong>Parametry:</strong></span>\n<ul>\n${product.parameters.map((params) => `<li><strong>${params.name}: </strong>${params.value}</li>\n`).join('')}</ul>\n</div>`,
// 		};
// 	});
// await saveFeedFileToDisk(
// 	{
// 		products,
// 		language: 'pl',
// 	},
// 	'admix',
// 	'csv',
// 	'./'
// );
